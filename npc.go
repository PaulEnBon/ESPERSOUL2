package main

import (
	"bufio"
	"fmt"
	"os"
	"strings"
)

// Dialogues des PNJ par salle et position avec r√©compenses
var npcDialogues = map[string]map[string]struct {
	dialogues []string
	reward    string
	amount    int
}{
	"salle1": {
		"8_3": {
			dialogues: []string{
				"Merci de m'avoir lib√©r√© de cette mal√©diction !",
				"Gr√¢ce √† toi, je peux enfin retrouver ma forme humaine.",
				"Maintenant, je peux t'aider dans ta qu√™te.",
				"Tu vas devoir affronter de nombreux dangers dans ce donjon.",
				"Utilise cette cl√© sp√©ciale pour ouvrir des portes verrouill√©es.",
				"Elles te dirigeront vers des tr√©sors cach√©s.",
				"Prends cette cl√©, elle t'aidera dans ta qu√™te.",
				"Les autres cr√©atures dans ce donjon ont subi le m√™me sort que moi.",
				"Ne les sous-estime pas, elles sont redoutables.",
			},
			reward: "cl√©s",
			amount: 1,
		},
	},
	"salle3": {
		"8_3": {
			dialogues: []string{
				"Tu m'as sauv√© ! Cette mal√©diction √©tait terrible...",
				"Je gardais ce tr√©sor depuis des ann√©es.",
				"Voici une potion de soin, tu en auras besoin !",
				"Attention, le boss final se trouve plus loin dans le donjon.",
			},
			reward: "potions",
			amount: 1,
		},
	},
	"salle4": {
		"1_3": {
			dialogues: []string{
				"Bienvenue, brave aventurier !",
				"Es-ce ce bon vieux Vitaly qui t'envoie me voir ?",
				"Je suis le marchand de ce donjon maudit.",
				"J'ai surv√©cu ici en √©changeant des objets avec les voyageurs.",
				"Que puis-je faire pour toi ?",
			},
			reward: "pi√®ces",
			amount: 1,
		},
	},
	"salle5": {
		"2_2": {
			dialogues: []string{
				"Salut aventurier ! Je suis le forgeron de ce donjon.",
				"J'ai pass√© des ann√©es √† perfectionner mon art ici.",
				"Si tu me donnes 15 pi√®ces, je peux te forger une √©p√©e !",
				"Que dis-tu de cette offre ?",
			},
			reward: "",
			amount: 0,
		},
	},
	"salle7": {
		"2_2": {
			dialogues: []string{
				"Salut mec ! Bienvenue dans mon casino souterrain !",
				"Tu veux tenter ta chance ? J'ai des caisses myst√®res !",
				"Certaines sont cheap mais avec des trucs de ouf dedans...",
				"D'autres sont ch√®res mais garantissent des armes l√©gendaires !",
				"Alors, tu veux jouer ?",
			},
			reward: "",
			amount: 0,
		},
	},
	"salle8": {
		"3_3": {
			dialogues: []string{
				"Bienvenue dans la salle des tr√©sors secrets !",
				"Seuls les plus braves aventuriers arrivent ici...",
				"Ces coffres contiennent des r√©compenses exceptionnelles !",
				"Que la chance soit avec toi, noble h√©ros !",
			},
			reward: "pi√®ces",
			amount: 10,
		},
		"4_3": {
			dialogues: []string{
				"Tu as d√©couvert notre sanctuaire secret !",
				"Ces tr√©sors √©taient cach√©s depuis des si√®cles...",
				"Prends cette √©p√©e l√©gendaire !",
				"Elle t'aidera dans tes futures aventures !",
			},
			reward: "√©p√©es",
			amount: 2,
		},
	},
}

// Syst√®me de dialogue avec les PNJ
func showDialogue(currentMap string, x, y int) {
	reader := bufio.NewReader(os.Stdin)
	key := fmt.Sprintf("%d_%d", x, y)

	// Cas sp√©cial pour le marchand de salle4
	if currentMap == "salle4" && key == "1_3" {
		npcData := npcDialogues[currentMap][key]
		fmt.Println("\nüí¨ === DIALOGUE ===")
		for i, line := range npcData.dialogues {
			fmt.Printf("üë® PNJ: %s\n", line)

			// Question oui/non apr√®s la phrase sur Vitaly
			if line == "Es-ce ce bon vieux Vitaly qui t'envoie me voir ?" {
				// S'assurer que la map interne existe
				if rewardsGiven[currentMap] == nil {
					rewardsGiven[currentMap] = make(map[string]bool)
				}
				// Ne donner la r√©compense qu'une seule fois
				if !rewardsGiven[currentMap][key] {
					fmt.Print("üë® PNJ: Est-ce bien cela ? (o/n): ")
					ans, _ := reader.ReadString('\n')
					ans = strings.TrimSpace(strings.ToLower(ans))
					if ans == "o" {
						addToInventory("potions", 1)
						rewardsGiven[currentMap][key] = true
						fmt.Println("üéÅ Vous recevez 1 potion.")
					} else {
						fmt.Println("üë® PNJ: Tr√®s bien, poursuivons‚Ä¶")
					}
				}
			}
			if i < len(npcData.dialogues)-1 {
				fmt.Print("Appuyez sur Entr√©e pour continuer...")
				reader.ReadString('\n')
			}
		}
		fmt.Print("Appuyez sur Entr√©e pour ouvrir le magasin...")
		reader.ReadString('\n')
		fmt.Println("===================")

		showMerchantInterface()
		return
	}

	// Cas sp√©cial pour le forgeron de salle5
	if currentMap == "salle5" && key == "2_2" {
		npcData := npcDialogues[currentMap][key]
		fmt.Println("\nüí¨ === DIALOGUE ===")
		for i, line := range npcData.dialogues {
			fmt.Printf("üî® Forgeron: %s\n", line)
			if i < len(npcData.dialogues)-1 {
				fmt.Print("Appuyez sur Entr√©e pour continuer...")
				reader.ReadString('\n')
			}
		}
		fmt.Print("Appuyez sur Entr√©e pour ouvrir la forge...")
		reader.ReadString('\n')
		fmt.Println("===================")

		showForgeInterface()
		return
	}

	// Cas sp√©cial pour le gambling de salle7
	if currentMap == "salle7" && key == "2_2" {
		npcData := npcDialogues[currentMap][key]
		fmt.Println("\nüí¨ === DIALOGUE ===")
		for i, line := range npcData.dialogues {
			fmt.Printf("üé∞ Croupier: %s\n", line)
			if i < len(npcData.dialogues)-1 {
				fmt.Print("Appuyez sur Entr√©e pour continuer...")
				reader.ReadString('\n')
			}
		}
		fmt.Print("Appuyez sur Entr√©e pour ouvrir le casino...")
		reader.ReadString('\n')
		fmt.Println("===================")

		showGamblingInterface()
		return
	}

	// Dialogue normal pour les autres PNJ
	npcData, exists := npcDialogues[currentMap][key]
	if !exists {
		fmt.Println("üë® PNJ: Merci de m'avoir lib√©r√© !")
		fmt.Print("Appuyez sur Entr√©e pour continuer...")
		reader.ReadString('\n')
		return
	}

	fmt.Println("\nüí¨ === DIALOGUE ===")
	for i, line := range npcData.dialogues {
		fmt.Printf("üë® PNJ: %s\n", line)
		if i < len(npcData.dialogues)-1 {
			fmt.Print("Appuyez sur Entr√©e pour continuer...")
			reader.ReadString('\n')
		}
	}

	// V√©rifier si la r√©compense a d√©j√† √©t√© donn√©e
	if rewardsGiven[currentMap][key] {
		fmt.Printf("üë® PNJ: Je t'ai d√©j√† donn√© ma r√©compense, mais merci encore!\n")
	} else {
		// Donner la r√©compense une seule fois
		if npcData.reward != "" && npcData.amount > 0 {
			addToInventory(npcData.reward, npcData.amount)
			rewardsGiven[currentMap][key] = true
		}
	}

	fmt.Print("Appuyez sur Entr√©e pour fermer...")
	reader.ReadString('\n')
	fmt.Println("===================")
}
