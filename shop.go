package main

import (
	"fmt"
	"math/rand"
	"time"
)

// Interface de commerce du marchand
func showMerchantInterface() {
	// Helper: read a single key (last of any burst), return as string "1".."9" or letter lowercased
	readKey := func() rune {
		if globalKeyEvents == nil {
			return 0
		}
		e := <-globalKeyEvents
		draining := true
		for draining {
			select {
			case next := <-globalKeyEvents:
				e = next
			default:
				draining = false
			}
		}
		r := e.Rune
		if r >= 'A' && r <= 'Z' {
			r = r + 32
		}
		return r
	}

	for {
		fmt.Println("\nüõí === MARCHAND ===")
		fmt.Printf("üí∞ Vos pi√®ces: %d\n", playerInventory["pi√®ces"])
		fmt.Printf("üß™ Vos potions: %d\n", playerInventory["potions"])
		fmt.Printf("üîë Vos cl√©s: %d\n", playerInventory["cl√©s"])
		fmt.Printf("üóùÔ∏è  Vos cl√©s rouill√©es: %d\n", playerInventory["cl√©s_sp√©ciales"])
		fmt.Printf("üíä Vos Puff 9K: %d\n", playerInventory["puff_9k"])
		fmt.Println("\nüìú Articles disponibles:")
		fmt.Println("1. Potion de soin - 5 pi√®ces")
		fmt.Println("2. Cl√© magique - 10 pi√®ces")
		fmt.Println("3. Vielle cl√© rouill√©e - 50 pi√®ces")
		fmt.Println("4. üíä Puff 9K - 20 pi√®ces (+15% attaque, -5HP)")
		// Nouveaux objets
		fmt.Println("5. Antidote - 6 pi√®ces")
		fmt.Println("6. Potion mineure - 3 pi√®ces")
		fmt.Println("7. Potion majeure - 10 pi√®ces")
		fmt.Println("8. Potion supr√™me - 25 pi√®ces")
	fmt.Println("9. Potion de d√©g√¢ts - 6 pi√®ces")
	fmt.Println("h. Vodka de Vitaly - 50 pi√®ces (r√©g√©n√®re toute la vie)")
		fmt.Println("a. Bombe incendiaire - 12 pi√®ces")
		fmt.Println("b. Bombe givrante - 14 pi√®ces")
		fmt.Println("c. Grenade fumig√®ne - 8 pi√®ces")
		fmt.Println("d. Parchemin de dispersion - 10 pi√®ces")
		fmt.Println("e. √âlixir de force - 12 pi√®ces")
		fmt.Println("f. √âlixir de vitesse - 10 pi√®ces")
		fmt.Println("g. √âlixir de pr√©cision - 15 pi√®ces")
		fmt.Println("q. Quitter le magasin")
		fmt.Print("Choisissez un article (1-9, a-g, q): ")
		key := readKey()

		switch key {
		case 'h': // Vodka de Vitaly - 50 pi√®ces
			if playerInventory["pi√®ces"] >= 50 {
				playerInventory["pi√®ces"] -= 50
				playerInventory["vodka_vitaly"]++
				fmt.Println("üç∂ Vous avez achet√© une Vodka de Vitaly ! Toute votre vie sera r√©g√©n√©r√©e lors de son utilisation.")
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces! (50 pi√®ces n√©cessaires)")
			}
		case '1':
			if playerInventory["pi√®ces"] >= 5 {
				playerInventory["pi√®ces"] -= 5
				playerInventory["potions"]++
				fmt.Println("‚ú® Vous avez achet√© une potion de soin!")
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces!")
			}

		case '2':
			if playerInventory["pi√®ces"] >= 10 {
				playerInventory["pi√®ces"] -= 10
				playerInventory["cl√©s"]++
				fmt.Println("‚ú® Vous avez achet√© une cl√© magique!")
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces!")
			}

		case '3':
			if playerInventory["pi√®ces"] >= 50 {
				playerInventory["pi√®ces"] -= 50
				playerInventory["cl√©s_sp√©ciales"]++
				fmt.Println("üåü Vous avez achet√© une VIELLE CL√â ROUILL√âE!")
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces! (50 pi√®ces n√©cessaires)")
			}

		case '4':
			if playerInventory["pi√®ces"] >= 20 {
				playerInventory["pi√®ces"] -= 20
				playerInventory["puff_9k"]++
				fmt.Println("üíä Vous avez achet√© un Puff 9K!")
				fmt.Println("‚ö° +15% de d√©g√¢ts d'attaque mais attention : -5HP!")
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces! (20 pi√®ces n√©cessaires)")
			}

		case '5': // Antidote - 6 pi√®ces
			if playerInventory["pi√®ces"] >= 6 {
				playerInventory["pi√®ces"] -= 6
				playerInventory["antidote"]++
				fmt.Println("‚ú® Vous avez achet√© un antidote !")
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces! (6 pi√®ces n√©cessaires)")
			}

		case '6': // Potion mineure - 3 pi√®ces
			if playerInventory["pi√®ces"] >= 3 {
				playerInventory["pi√®ces"] -= 3
				playerInventory["potion_mineure"]++
				fmt.Println("‚ú® Vous avez achet√© une potion mineure !")
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces! (3 pi√®ces n√©cessaires)")
			}

		case '7': // Potion majeure - 10 pi√®ces
			if playerInventory["pi√®ces"] >= 10 {
				playerInventory["pi√®ces"] -= 10
				playerInventory["potion_majeure"]++
				fmt.Println("‚ú® Vous avez achet√© une potion majeure !")
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces! (10 pi√®ces n√©cessaires)")
			}

		case '8': // Potion supr√™me - 25 pi√®ces
			if playerInventory["pi√®ces"] >= 25 {
				playerInventory["pi√®ces"] -= 25
				playerInventory["potion_supreme"]++
				fmt.Println("‚ú® Vous avez achet√© une potion supr√™me !")
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces! (25 pi√®ces n√©cessaires)")
			}

		case '9': // Potion de d√©g√¢ts - 6 pi√®ces
			if playerInventory["pi√®ces"] >= 6 {
				playerInventory["pi√®ces"] -= 6
				playerInventory["potion_degats"]++
				fmt.Println("‚ú® Vous avez achet√© une potion de d√©g√¢ts !")
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces! (6 pi√®ces n√©cessaires)")
			}

		case 'a': // Bombe incendiaire - 12 pi√®ces
			if playerInventory["pi√®ces"] >= 12 {
				playerInventory["pi√®ces"] -= 12
				playerInventory["bombe_incendiaire"]++
				fmt.Println("‚ú® Vous avez achet√© une bombe incendiaire !")
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces! (12 pi√®ces n√©cessaires)")
			}

		case 'b': // Bombe givrante - 14 pi√®ces
			if playerInventory["pi√®ces"] >= 14 {
				playerInventory["pi√®ces"] -= 14
				playerInventory["bombe_givrante"]++
				fmt.Println("‚ú® Vous avez achet√© une bombe givrante !")
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces! (14 pi√®ces n√©cessaires)")
			}

		case 'c': // Grenade fumig√®ne - 8 pi√®ces
			if playerInventory["pi√®ces"] >= 8 {
				playerInventory["pi√®ces"] -= 8
				playerInventory["grenade_fumigene"]++
				fmt.Println("‚ú® Vous avez achet√© une grenade fumig√®ne !")
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces! (8 pi√®ces n√©cessaires)")
			}

		case 'd': // Parchemin de dispersion - 10 pi√®ces
			if playerInventory["pi√®ces"] >= 10 {
				playerInventory["pi√®ces"] -= 10
				playerInventory["parchemin_dispersion"]++
				fmt.Println("‚ú® Vous avez achet√© un parchemin de dispersion !")
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces! (10 pi√®ces n√©cessaires)")
			}

		case 'e': // √âlixir de force - 12 pi√®ces
			if playerInventory["pi√®ces"] >= 12 {
				playerInventory["pi√®ces"] -= 12
				playerInventory["elixir_force"]++
				fmt.Println("‚ú® Vous avez achet√© un √©lixir de force !")
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces! (12 pi√®ces n√©cessaires)")
			}

		case 'f': // √âlixir de vitesse - 10 pi√®ces
			if playerInventory["pi√®ces"] >= 10 {
				playerInventory["pi√®ces"] -= 10
				playerInventory["elixir_vitesse"]++
				fmt.Println("‚ú® Vous avez achet√© un √©lixir de vitesse !")
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces! (10 pi√®ces n√©cessaires)")
			}

		case 'g': // √âlixir de pr√©cision - 15 pi√®ces
			if playerInventory["pi√®ces"] >= 15 {
				playerInventory["pi√®ces"] -= 15
				playerInventory["elixir_critique"]++
				fmt.Println("‚ú® Vous avez achet√© un √©lixir de pr√©cision !")
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces! (15 pi√®ces n√©cessaires)")
			}

		case 'q':
			fmt.Println("üëã Merci de votre visite!")
			return

		default:
			fmt.Println("‚ùå Choix invalide!")
		}
		fmt.Print("Appuyez sur une touche pour continuer...")
		_ = readKey()
	}
}

// Interface du forgeron
func showForgeInterface() {
	readKey := func() rune {
		if globalKeyEvents == nil {
			return 0
		}
		e := <-globalKeyEvents
		draining := true
		for draining {
			select {
			case next := <-globalKeyEvents:
				e = next
			default:
				draining = false
			}
		}
		r := e.Rune
		if r >= 'A' && r <= 'Z' {
			r = r + 32
		}
		return r
	}

	for {
		fmt.Println("\nüî® === FORGERON ===")
		fmt.Printf("üí∞ Pi√®ces: %d  ü™® Roches: %d\n", playerInventory["pi√®ces"], currentPlayer.Roches)

		// Calcul des co√ªts d'am√©lioration actuels
		coutArme := CoutAmelioration(currentPlayer.NiveauArme)
		coutArmure := CoutAmelioration(currentPlayer.NiveauArmure)

		fmt.Println("\nüõ†Ô∏è  Services disponibles:")
		fmt.Printf("1. Am√©liorer l'arme (Niv %d ‚Üí %d) - %d roches\n", currentPlayer.NiveauArme, currentPlayer.NiveauArme+1, coutArme)
		fmt.Printf("2. Am√©liorer l'armure (Niv %d ‚Üí %d) - %d roches\n", currentPlayer.NiveauArmure, currentPlayer.NiveauArmure+1, coutArmure)
		fmt.Println("3. Afficher les stats du joueur")
		fmt.Println("4. Quitter la forge")
		fmt.Print("Choisissez une option (1-4): ")
		key := readKey()

		switch key {
		case '1': // Am√©liorer l'arme
			if err := AmeliorerArme(&currentPlayer, len(currentPlayer.ArmesDisponibles)); err != nil {
				fmt.Printf("‚ùå %v\n", err)
			} else {
				// Met √† jour l'arme √©quip√©e sans double-ajout des bonus
				if currentPlayer.NiveauArme < len(currentPlayer.ArmesDisponibles) {
					currentPlayer.ArmeEquipee = currentPlayer.ArmesDisponibles[currentPlayer.NiveauArme]
				}
				fmt.Printf("‚úÖ Arme am√©lior√©e ‚Üí %s (niv %d)\n", currentPlayer.ArmeEquipee.Nom, currentPlayer.NiveauArme)
			}

		case '2': // Am√©liorer l'armure
			if err := AmeliorerArmure(&currentPlayer, len(currentPlayer.ArmuresDisponibles)); err != nil {
				fmt.Printf("‚ùå %v\n", err)
			} else {
				if currentPlayer.NiveauArmure < len(currentPlayer.ArmuresDisponibles) {
					currentPlayer.ArmureEquipee = currentPlayer.ArmuresDisponibles[currentPlayer.NiveauArmure]
				}
				fmt.Printf("‚úÖ Armure am√©lior√©e ‚Üí %s (niv %d)\n", currentPlayer.ArmureEquipee.Nom, currentPlayer.NiveauArmure)
			}

		case '3': // Afficher stats
			AfficherStats(&currentPlayer)

		case '4':
			fmt.Println("üëã Revenez quand vous voulez!")
			return

		default:
			fmt.Println("‚ùå Choix invalide!")
		}
		fmt.Print("Appuyez sur une touche pour continuer...")
		_ = readKey()
	}
}

// Interface de gambling
func showGamblingInterface() {
	rand.Seed(time.Now().UnixNano())

	readKey := func() rune {
		if globalKeyEvents == nil {
			return 0
		}
		e := <-globalKeyEvents
		draining := true
		for draining {
			select {
			case next := <-globalKeyEvents:
				e = next
			default:
				draining = false
			}
		}
		r := e.Rune
		if r >= 'A' && r <= 'Z' {
			r = r + 32
		}
		return r
	}

	for {
		fmt.Println("\nüé∞ === CASINO SOUTERRAIN ===")
		fmt.Printf("üí∞ Vos pi√®ces: %d\n", playerInventory["pi√®ces"])
		// Retir√©: affichage des √©p√©es
		fmt.Printf("üíä Vos Puff 9K: %d\n", playerInventory["puff_9k"])
		if playerStats.hasLegendaryWeapon {
			fmt.Println("üåü Arme l√©gendaire √©quip√©e !")
		}

		fmt.Println("\nüì¶ Caisses disponibles:")
		fmt.Println("1. Caisse Bronze - 5 pi√®ces (Chances myst√©rieuses...)")
		fmt.Println("2. Caisse Argent - 25 pi√®ces (Bonnes chances)")
		fmt.Println("3. Caisse Or - 75 pi√®ces (Tr√®s bonnes chances)")
		fmt.Println("4. Caisse Legendary - 150 pi√®ces (Garanti l√©gendaire !)")
		fmt.Println("5. Quitter le casino")
		fmt.Print("Choisissez une caisse (1-5): ")
		key := readKey()

		switch key {
		case '1': // Caisse Bronze - 5 pi√®ces
			if playerInventory["pi√®ces"] >= 5 {
				playerInventory["pi√®ces"] -= 5
				fmt.Println("üì¶ *Ouverture de la caisse Bronze...*")
				time.Sleep(1 * time.Second)

				roll := rand.Intn(100)
				if roll < 2 { // 2% chance d'arme l√©gendaire
					playerStats.hasLegendaryWeapon = true
					fmt.Println("üåü JACKPOT ! Vous obtenez l'EXCALIBUR L√âGENDAIRE !")
					fmt.Println("‚ö° +50% de d√©g√¢ts d'attaque permanents !")
				} else if roll < 10 { // 8% chance d'√©p√©es
					amount := 1 + rand.Intn(2) // 1-2 √©p√©es
					addToInventory("√©p√©es", amount)
				} else if roll < 30 { // 20% chance de puff 9k
					addToInventory("puff_9k", 1)
				} else if roll < 60 { // 30% chance de potions
					amount := 1 + rand.Intn(3) // 1-3 potions
					addToInventory("potions", amount)
				} else { // 40% chance de pi√®ces
					amount := 2 + rand.Intn(8) // 2-9 pi√®ces
					addToInventory("pi√®ces", amount)
				}
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces !")
			}

		case '2': // Caisse Argent - 25 pi√®ces
			if playerInventory["pi√®ces"] >= 25 {
				playerInventory["pi√®ces"] -= 25
				fmt.Println("üì¶ *Ouverture de la caisse Argent...*")
				time.Sleep(1 * time.Second)

				roll := rand.Intn(100)
				if roll < 5 { // 5% chance d'arme l√©gendaire
					playerStats.hasLegendaryWeapon = true
					fmt.Println("üåü INCROYABLE ! Vous obtenez l'EXCALIBUR L√âGENDAIRE !")
					fmt.Println("‚ö° +50% de d√©g√¢ts d'attaque permanents !")
				} else if roll < 25 { // 20% chance d'√©p√©es multiples
					amount := 2 + rand.Intn(3) // 2-4 √©p√©es
					addToInventory("√©p√©es", amount)
				} else if roll < 50 { // 25% chance de puff 9k multiple
					amount := 1 + rand.Intn(2) // 1-2 puff 9k
					addToInventory("puff_9k", amount)
				} else if roll < 80 { // 30% chance de potions
					amount := 3 + rand.Intn(3) // 3-5 potions
					addToInventory("potions", amount)
				} else { // 20% chance de pi√®ces
					amount := 15 + rand.Intn(20) // 15-34 pi√®ces
					addToInventory("pi√®ces", amount)
				}
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces !")
			}

		case '3': // Caisse Or - 75 pi√®ces
			if playerInventory["pi√®ces"] >= 75 {
				playerInventory["pi√®ces"] -= 75
				fmt.Println("üì¶ *Ouverture de la caisse Or...*")
				time.Sleep(1 * time.Second)

				roll := rand.Intn(100)
				if roll < 15 { // 15% chance d'arme l√©gendaire
					playerStats.hasLegendaryWeapon = true
					fmt.Println("üåü FANTASTIQUE ! Vous obtenez l'EXCALIBUR L√âGENDAIRE !")
					fmt.Println("‚ö° +50% de d√©g√¢ts d'attaque permanents !")
				} else if roll < 40 { // 25% chance d'√©p√©es premium
					amount := 3 + rand.Intn(3) // 3-5 √©p√©es
					addToInventory("√©p√©es", amount)
				} else if roll < 65 { // 25% chance de puff 9k premium
					amount := 2 + rand.Intn(2) // 2-3 puff 9k
					addToInventory("puff_9k", amount)
				} else if roll < 90 { // 25% chance de potions premium
					amount := 5 + rand.Intn(5) // 5-9 potions
					addToInventory("potions", amount)
				} else { // 10% chance de pi√®ces premium
					amount := 50 + rand.Intn(50) // 50-99 pi√®ces
					addToInventory("pi√®ces", amount)
				}
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces !")
			}

		case '4': // Caisse Legendary - 150 pi√®ces (100% l√©gendaire)
			if playerInventory["pi√®ces"] >= 150 {
				playerInventory["pi√®ces"] -= 150
				fmt.Println("üì¶ *Ouverture de la caisse LEGENDARY...*")
				time.Sleep(2 * time.Second)

				playerStats.hasLegendaryWeapon = true
				fmt.Println("üåü L√âGENDAIRE GARANTI ! Vous obtenez l'EXCALIBUR L√âGENDAIRE !")
				fmt.Println("‚ö° +50% de d√©g√¢ts d'attaque permanents !")

				// Bonus suppl√©mentaire
				bonusRoll := rand.Intn(3)
				switch bonusRoll {
				case 0:
					addToInventory("√©p√©es", 5)
					fmt.Println("üéÅ Bonus : 5 √©p√©es suppl√©mentaires !")
				case 1:
					addToInventory("puff_9k", 3)
					fmt.Println("üéÅ Bonus : 3 Puff 9K suppl√©mentaires !")
				case 2:
					addToInventory("potions", 10)
					fmt.Println("üéÅ Bonus : 10 potions suppl√©mentaires !")
				}
			} else {
				fmt.Println("‚ùå Vous n'avez pas assez de pi√®ces !")
			}

		case '5':
			fmt.Println("üé∞ √Ä bient√¥t au casino !")
			return

		default:
			fmt.Println("‚ùå Choix invalide !")
		}
		fmt.Print("Appuyez sur une touche pour continuer...")
		_ = readKey()
	}
}
